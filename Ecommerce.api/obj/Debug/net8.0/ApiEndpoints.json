[
  {
    "ContainingType": "Ecommerce.api.Controllers.TokenController",
    "Method": "AdminLogin",
    "RelativePath": "api/Token",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "ClassLibrary2.Dtos.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "GetAllUser",
    "RelativePath": "api/User",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "CreateUser",
    "RelativePath": "api/User",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userdto",
        "Type": "ClassLibrary2.Dtos.UserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "GetUserById",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedUser",
        "Type": "ClassLibrary2.Dtos.UserDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "Delete",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "GetAllOrders",
    "RelativePath": "api/User/allorders",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "AddToCart",
    "RelativePath": "api/User/cart",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "itemDto",
        "Type": "ClassLibrary2.Dtos.CartItemDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "GetUserCart",
    "RelativePath": "api/User/cart/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "ClearCart",
    "RelativePath": "api/User/cart/{userId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "RemoveFromCart",
    "RelativePath": "api/User/cartitem/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "PlaceOrder",
    "RelativePath": "api/User/placeorder",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "ClassLibrary2.Dtos.OrderDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "CreateProduct",
    "RelativePath": "api/User/products",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDto",
        "Type": "ClassLibrary2.Dtos.ProductDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "GetAllProducts",
    "RelativePath": "api/User/products",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "GetProductById",
    "RelativePath": "api/User/products/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "UpdateProduct",
    "RelativePath": "api/User/products/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedProduct",
        "Type": "ClassLibrary2.Model.Product",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "DeleteProduct",
    "RelativePath": "api/User/products/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "SearchProducts",
    "RelativePath": "api/User/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "query",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "UpdateStatus",
    "RelativePath": "api/User/update-status/{orderId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "newStatus",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.UserController",
    "Method": "GetUserOrders",
    "RelativePath": "api/User/userorders/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecommerce.api.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Ecommerce.api.WeatherForecast, Ecommerce.api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]